{"version":3,"sources":["components/Most/DetailView.jsx","views/Most/Detail.jsx"],"names":["DetailView","file","pdfjs","GlobalWorkerOptions","workerSrc","version","useState","numPages","setNumPages","pageNum","setPageNum","console","log","className","error","i18n","t","loading","onLoadSuccess","pageNumber","scale","onClick","DetailMost","uploadService","upload","setUpload","setError","id","useParams","useAppContext","state","dispatch","useEffect","type","SET_PAGE_TITLE","value","getUpload","category","MOST_TYPE","then","u","err","to","user","can_edit","is_admin","description","BASE_API_URL"],"mappings":"4PA8CeA,IAzCf,YAA6B,IAARC,EAAO,EAAPA,KACnBC,IAAMC,oBAAoBC,UAA1B,kDAAiFF,IAAMG,QAAvF,kBAD0B,MAGMC,mBAAS,MAHf,mBAGnBC,EAHmB,KAGTC,EAHS,OAIIF,mBAAS,GAJb,mBAInBG,EAJmB,KAIVC,EAJU,KAY1B,OANAC,QAAQC,IAAIX,GAOV,yBAAKY,UAAU,kBACb,kBAAC,IAAD,CACEZ,KAAMA,EACNa,MAAOC,IAAKC,EAAE,oBACdC,QAASF,IAAKC,EAAE,sBAChBE,cAVN,YAA4C,IAAZX,EAAW,EAAXA,SAC9BC,EAAYD,KAWR,kBAAC,IAAD,CACEY,WAAYV,EACZW,MAAO,KAGVb,GACD,yBAAKM,UAAU,eACZJ,EAAU,GAAK,4BAAQI,UAAU,+EACVQ,QAAS,kBAAMX,EAAWD,EAAU,KAD5C,IACkD,MADlD,KAGhB,8BAAOA,EAAP,IAAiBF,GAChBE,EAAUF,GAAY,4BAAQM,UAAU,+EACVQ,QAAS,kBAAMX,EAAWD,EAAU,KAD5C,IACkD,MADlD,S,gICehBa,UAzCf,YAAsC,IAAjBC,EAAgB,EAAhBA,cAAgB,EACPjB,mBAAS,MADF,mBAC5BkB,EAD4B,KACpBC,EADoB,OAETnB,mBAAS,MAFA,mBAE5BQ,EAF4B,KAErBY,EAFqB,KAG5BC,EAAMC,cAAND,GAH4B,EAITE,cAAnBC,EAJ4B,EAI5BA,MAAOC,EAJqB,EAIrBA,SAkBd,OAfAC,qBAAU,WACRD,EAAS,CAACE,KAAMC,IAAgBC,MAAOpB,IAAKC,EAAE,uBAE9CO,EAAca,UAAU,CACtBH,KAAM,OACNI,SAAUC,IACVX,OACCY,MAAK,SAACC,GACPf,EAAUe,MACT,SAACC,GACFf,EAASe,QAEV,CAACV,EAAUJ,EAAIJ,IAGXC,GACL,yBAAKX,UAAU,0BACb,kBAAC,IAAD,CAAOC,MAAOA,IACd,kBAAC,IAAD,CAAM4B,GAAG,gBAAgB7B,UAAU,SAASE,IAAKC,EAAE,mBAClDc,EAAMa,OAASb,EAAMa,KAAKC,UAAYd,EAAMa,KAAKE,UAChD,yBAAKhC,UAAU,cACb,kBAAC,IAAD,CAAM6B,GAAE,gBAAWf,EAAX,SAAsBd,UAAU,OAAOE,IAAKC,EAAE,sBAEtD,KAEJ,0BAAMH,UAAU,cAAcW,EAAOsB,aACrC,yBAAKjC,UAAU,QACb,kBAAC,IAAD,CAAYZ,KAAI,UAAK8C,IAAL,gCAAyCT,IAAzC,YAAsDd,EAAOG,GAA7D","file":"static/js/6.9a1d7c49.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Document, Page, pdfjs} from \"react-pdf\";\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport i18n from \"../../utils/i18n\";\n\nfunction DetailView({file}) {\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n  const [numPages, setNumPages] = useState(null);\n  const [pageNum, setPageNum] = useState(1);\n\n  console.log(file)\n\n  function onDocumentLoadSuccess({numPages}) {\n    setNumPages(numPages);\n  }\n\n  return (\n    <div className=\"container py-4\">\n      <Document\n        file={file}\n        error={i18n.t(\"pdf-reader.error\")}\n        loading={i18n.t(\"pdf-reader.loading\")}\n        onLoadSuccess={onDocumentLoadSuccess}\n      >\n        <Page\n          pageNumber={pageNum}\n          scale={2.0}\n        />\n      </Document>\n      {numPages && (\n      <div className=\"text-center\">\n        {pageNum > 1 && <button className=\"pr-4 font-bold text-4xl focus:outline-none text-blue-500 hover:text-blue-600\"\n                                onClick={() => setPageNum(pageNum - 1)}> {\" < \"} </button>\n        }\n        <span>{pageNum}/{numPages}</span>\n        {pageNum < numPages && <button className=\"pl-4 font-bold text-4xl focus:outline-none text-blue-500 hover:text-blue-600\"\n                                       onClick={() => setPageNum(pageNum + 1)}> {\" > \"} </button>\n        }\n      </div>\n      )}\n    </div>\n  )\n}\n\n\nexport default DetailView\n","import React, {useEffect, useState} from 'react';\nimport DetailView from \"../../components/Most/DetailView\";\nimport {Link, useParams} from \"react-router-dom\";\nimport {MOST_TYPE} from \"../../api/upload\";\nimport Error from \"../../components/Error/Error\";\nimport {BASE_API_URL} from \"../../api\";\nimport i18n from \"../../utils/i18n\";\nimport {SET_PAGE_TITLE, useAppContext} from \"../../context/app\";\n\n\nfunction DetailMost({uploadService}) {\n  const [upload, setUpload] = useState(null);\n  const [error, setError] = useState(null);\n  const {id} = useParams();\n  const {state, dispatch} = useAppContext();\n\n\n  useEffect(() => {\n    dispatch({type: SET_PAGE_TITLE, value: i18n.t(\"pages.most.detail\")});\n\n    uploadService.getUpload({\n      type: \"menu\",\n      category: MOST_TYPE,\n      id,\n    }).then((u) => {\n      setUpload(u)\n    }, (err) => {\n      setError(err)\n    })\n  }, [dispatch, id, uploadService])\n\n\n  return upload && (\n    <div className=\"container py-4 mx-auto\">\n      <Error error={error} />\n      <Link to=\"/most/archive\" className=\"block\">{i18n.t(\"most.link.back\")}</Link>\n      {state.user && (state.user.can_edit || state.user.is_admin) ? (\n        <div className=\"text-right\">\n          <Link to={`/most/${id}/edit`} className=\"btn\">{i18n.t(\"notice.link.edit\")}</Link>\n        </div>\n      ) : null\n      }\n      <span className=\"form-title\">{upload.description}</span>\n      <div className=\"py-4\">\n        <DetailView file={`${BASE_API_URL}/api/v1/uploads/menu/${MOST_TYPE}/${upload.id}/download`}/>\n      </div>\n    </div>\n  )\n}\n\n\nexport default DetailMost\n"],"sourceRoot":""}