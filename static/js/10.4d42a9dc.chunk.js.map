{"version":3,"sources":["components/Upload/UploadForm.jsx","views/Most/Upload.jsx"],"names":["UploadForm","onSubmit","useForm","handleSubmit","register","errors","className","i18n","t","type","name","ref","required","field","description","message","accept","file","UploadMost","uploadService","history","useHistory","dispatch","useAppContext","useEffect","SET_PAGE_TITLE","value","length","uploadOne","MOST_TYPE","then","push"],"mappings":"qGAAA,mCA2CeA,IAvCf,YAAiC,IAAZC,EAAW,EAAXA,SAAW,EACWC,cAAlCC,EADuB,EACvBA,aAAcC,EADS,EACTA,SAAUC,EADD,EACCA,OAE/B,OACE,0BAAMJ,SAAUE,EAAaF,GAAWK,UAAU,QAChD,yBAAKA,UAAU,cACb,+BAAQC,IAAKC,EAAE,4BACf,6BACE,2BAAOC,KAAK,OAAOC,KAAK,cACjBC,IAAKP,EAAS,CACZQ,SAAUL,IAAKC,EAAE,mCAAoC,CAACK,MAAON,IAAKC,EAAE,kCAI/E,0BAAMF,UAAU,eACXD,EAAOS,aAAeT,EAAOS,YAAYC,UAGhD,yBAAKT,UAAU,cACb,+BAAQC,IAAKC,EAAE,qBACf,6BACE,2BAAOC,KAAK,OAAOC,KAAK,OACjBM,OAAO,uBACPL,IAAKP,EAAS,CACZQ,SAAUL,IAAKC,EAAE,mCAAoC,CAACK,MAAON,IAAKC,EAAE,2BAI/E,0BAAMF,UAAU,eACXD,EAAOY,MAAQZ,EAAOY,KAAKF,UAGlC,6BACE,4BAAQN,KAAK,SAASH,UAAU,OAAOC,IAAKC,EAAE,2B,iCCrCtD,iEAgCeU,UAzBf,YAAsC,IAAjBC,EAAgB,EAAhBA,cACbC,EAAUC,cACTC,EAAYC,cAAZD,SAcP,OAZAE,qBAAU,WACRF,EAAS,CAACb,KAAMgB,IAAgBC,MAAOnB,IAAKC,EAAE,0BAY9C,yBAAKF,UAAU,0BACb,0BAAMA,UAAU,cAAcC,IAAKC,EAAE,qBACrC,kBAAC,IAAD,CAAYP,SAXhB,YAA4C,IAArBgB,EAAoB,EAApBA,KAAMH,EAAc,EAAdA,YACvBG,GAAQA,EAAKU,OAAS,GACxBR,EAAcS,UAAUX,EAAK,GAAIY,IAAWf,GAAagB,MAAK,WAC5DV,EAAQW,KAAK","file":"static/js/10.4d42a9dc.chunk.js","sourcesContent":["import React from \"react\";\nimport i18n from \"../../utils/i18n\";\nimport {useForm} from \"react-hook-form\";\n\nfunction UploadForm({onSubmit}) {\n  const {handleSubmit, register, errors} = useForm();\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"pt-4\">\n      <div className=\"form-group\">\n        <label>{i18n.t(\"form.notice.Description\")}</label>\n        <div>\n          <input type=\"text\" name=\"description\"\n                 ref={register({\n                   required: i18n.t(\"form.validationMessages.required\", {field: i18n.t(\"form.notice.Description\")}),\n                 })}\n          />\n        </div>\n        <span className=\"input-error\">\n            {errors.description && errors.description.message}\n        </span>\n      </div>\n      <div className=\"form-group\">\n        <label>{i18n.t(\"form.notice.File\")}</label>\n        <div>\n          <input type=\"file\" name=\"file\"\n                 accept=\"application/pdf,.pdf\"\n                 ref={register({\n                   required: i18n.t(\"form.validationMessages.required\", {field: i18n.t(\"form.notice.File\")}),\n                 })}\n          />\n        </div>\n        <span className=\"input-error\">\n            {errors.file && errors.file.message}\n        </span>\n      </div>\n      <div>\n        <button type=\"submit\" className=\"btn\">{i18n.t(\"form.notice.Submit\")}</button>\n      </div>\n    </form>\n  )\n}\n\nexport default UploadForm\n","import UploadForm from \"../../components/Upload/UploadForm\";\nimport React, {useEffect} from \"react\";\nimport i18n from \"../../utils/i18n\";\nimport {MOST_TYPE} from \"../../api/upload\";\nimport {useHistory} from \"react-router-dom\";\nimport {SET_PAGE_TITLE, useAppContext} from \"../../context/app\";\n\nfunction UploadMost({uploadService}) {\n  const history = useHistory();\n  const {dispatch} = useAppContext();\n\n  useEffect(() => {\n    dispatch({type: SET_PAGE_TITLE, value: i18n.t(\"pages.most.upload\")});\n  });\n\n  function handleSubmit({file, description}) {\n    if (file && file.length > 0) {\n      uploadService.uploadOne(file[0], MOST_TYPE, description).then(() => {\n        history.push(\"/most\")\n      })\n    }\n  }\n\n  return (\n    <div className=\"container mx-auto py-4\">\n      <span className=\"form-title\">{i18n.t(\"most.link.upload\")}</span>\n      <UploadForm onSubmit={handleSubmit}/>\n    </div>\n  )\n}\n\n\nexport default UploadMost\n"],"sourceRoot":""}